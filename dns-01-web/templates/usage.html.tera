{% extends "layout" %}
{% block title %}Usage{% endblock title %}
{% block head %}
    {{ super() }}
    <style type="text/css">
    code {
        font-family: "Courier New", monospace;
        border: 1px solid #D3D3D3;
    }

    .codeblock {
        display: block;
        margin: 10px 0px 10px 0px;
        padding: 10px;
        width: 100%;
    }
    </style>
{% endblock head %}
{% block content %}
    <h1>Usage</h1>
    <p>Using dns-01.online for dns-01 validation is <b>not</b> safe, and is not recommended for production systems. See "Security Concerns" section for more information.</p>

    <h2>Step 0</h2>
    <p>
        <a href="/register">Register an account</a> on this site to get an <a href="/overview">API key</a>. The API Key is only used for verifying access to the api endpoint, and to make sure that two different users can't write to the same record name (see Security section)<br />

    <h2>Step 1</h2>
    <p>
        Create a CNAME record on the domain you are trying to validate, pointing to a subdomain of your choice on the <em>.challenge.dns-01.online</em> domain:<br />

        <code class="codeblock">
            _acme-challenge IN  CNAME   <b>myuniquestring</b>.challenge.dns-01.online.
        </code>

        If you are using a third party DNS provider (and you probably are if you need this service), you will have to create the CNAME record using whatever methods they have provided, most likely a web interface.
    </p>

    <h2>Step 2</h2>
    <p>
        Export your <a href="/overview">API key</a> as well as the unique string your CNAME record points to as environment variables, and then run your certbot command, specifying <code>put-token.sh</code> as the <code>--manual-auth-hook</code>, which will install the TXT record on the dns-01.online domain.</p>

        <code class="codeblock">
            # Export variables used by put-token.sh<br/>
            export DNS01_APIKEY="<b>my-api-key-goes-here</b>"<br />
            export DNS01_RECORD="<b>myuniquestring</b>"<br /><br />

            # Run certbot command to issue challenge<br/>
            certbot-auto certonly --manual \<br />
                &nbsp;&nbsp;-d *.<b>mydomain.tld</b> \<br />
                &nbsp;&nbsp;--email <b>yourname@mydomain.tld</b> \<br />
                &nbsp;&nbsp;--manual-auth-hook ~/put-token.sh \<br />
                &nbsp;&nbsp;--agree-tos --manual-ip-logging-ok \<br />
                &nbsp;&nbsp;--preferred-challenges dns<br />
                &nbsp;&nbsp;--server https://acme-v02.api.letsencrypt.org/directory \
        </code>

        The actual token that gets pushed to dns-01.online is grabbed from the <code>$CERTBOT_VALIDATION</code> environment variable that certbot exports prior to calling the hook.
    </p>

    <h2>All done!</h2>
    <p>
        certbot should now have generated and answered the dns-01 challenge from LetsEncrypt, and put your new wildcard certificates in your /etc/letsencrypt/live folder. You're done!
    </p>

    <h1>Security concerns</h1>
    <p>
        There are two big security problems with using dns-01.online for your dns-01 validation needs. Because of these, it is not recommended that dns-01.online is used for production or important systems, since you might be putting the trustworthiness of your domain at risk.<br />

        <h3>Entrusting <em>dns-01</em> with the means to generate valid certificates for your domains</h3>
        When creating the <code>_acme-challenge</code> CNAME record pointing to my domain, you are potentially giving me the ability to requisition certificates on behalf of your domain, since I could initiate my own certificate request using certbot, and simply plant the token on the dns-01.online nameserver, giving me a valid wildcard certificate for your domain.<br />

        <h3>Potential for third parties to generate valid certificates for your domains</h3>
        If a third party found the CNAME record pointing to dns-01.online, as well as your API key, he could initiate a certificate request, and place his own challenge token into the .challenge.dns-01.online nameserver using the API, and thereby complete the challenge.<br />

        <h3>Solutions</h3>
        The only real solution to these problems is to not rely on me to do the validation for you. You can either setup your own infrastructure, or simply clone this project and set it up yourself locally, blocking access from outside sources.
    </p>
    <br /><br /><br /><br /><br /><br />
    
{% endblock content %}
