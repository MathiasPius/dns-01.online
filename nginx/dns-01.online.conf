server {
	listen 443 ssl default_server;
	listen [::]:443 ssl default_server;

	server_name dns-01.online www.dns-01.online;

	ssl on;
	ssl_certificate /etc/letsencrypt/live/dns-01.online/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/dns-01.online/privkey.pem;


	# Best Practices from cipherli.st
	ssl_protocols TLSv1.2;
	ssl_prefer_server_ciphers on; 
	ssl_dhparam /etc/nginx/dhparam.pem; # openssl dhparam -out /etc/nginx/dhparam.pem 4096
	ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
	ssl_ecdh_curve secp384r1; # Requires nginx >= 1.1.0
	ssl_session_timeout  10m;
	ssl_session_cache shared:SSL:10m;
	ssl_session_tickets off; # Requires nginx >= 1.5.9
	ssl_stapling on; # Requires nginx >= 1.3.7
	ssl_stapling_verify on; # Requires nginx => 1.3.7
	resolver 8.8.8.8 8.8.4.4 valid=300s;
	resolver_timeout 5s; 
	add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
	add_header X-Frame-Options DENY;
	add_header X-Content-Type-Options nosniff;
	add_header X-XSS-Protection "1; mode=block";
	add_header X-Robots-Tag none; 

#	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
#	ssl_prefer_server_ciphers on;
#	ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-RC4-SHA:ECDHE-RSA-AES128-SHA:AES128-SHA:RC4-SHA;
#	ssl_session_cache shared:SSL:10m;
#	add_header Strict-Transport-Security max-age=31536000;

        location / {
                proxy_pass http://127.0.0.1:8000;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
        }
}

server {
        listen 80 default_server;
        listen [::]:80 default_server;

        server_name dns-01.online www.dns-01.online;

	return 301 https://$host$request_uri;
}

